% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MCMCglmm.utilities.R
\name{MCMCglmm.utilities}
\alias{MCMCglmm.utilities}
\alias{MCMCglmm.levels}
\alias{MCMCglmm.traits}
\title{MCMCglmm object utility functions}
\usage{
MCMCglmm.traits(MCMglmm, ...)

MCMCglmm.levels(MCMglmm, ...)

MCMCglmm.sample(MCMglmm, n, ...)

MCMCglmm.covars(MCMglmm, n, sample, ...)
}
\arguments{
\item{MCMCglmm}{A \code{MCMCglmm} object.}

\item{...}{Optional arguments to be passed to the function..}

\item{n}{Optional, a number of random samples to extract.}

\item{sample}{Optional, the specific samples to extract (is ignored if \code{n} is present).}
}
\description{
Different utility functions to extract aspects of a \code{MCMCglmm} object.
}
\details{
\itemize{
\item \code{MCMCglmm.levels} returns the different random and residual terms levels of a \code{MCMCglmm} object. This function uses the default option \code{convert = TRUE} to convert the names into something more readable. Toggle to \code{convert = FALSE} for the raw names.
\item \code{MCMCglmm.traits} returns the column names of the different traits of a \code{MCMCglmm} formula object.
\item \code{MCMCglmm.sample} returns a vector of sample IDs present in the \code{MCMCglmm} object. If \code{n} is missing, all the samples IDs are returned. Else, a random series of sample IDs are returned (with replacement if n greater than the number of available samples).
\item \code{MCMCglmm.covars} returns a list of covariance matrices and intercepts from a \code{MCMCglmm} object (respectively from \code{MCMCglmm$VCV} and \code{MCMCglmm$Sol}). By default, all the covariance matrices and intercepts are returned but you can use either of the arguments \code{sample} to return specific samples (e.g. \code{MCMCglmm.covars(data, sample = c(1, 42))} for returning the first and 42nd samples) or \code{n} to return a specific number of random samples (e.g. \code{MCMCglmm.covars(data, n = 42)} for returning 42 random samples).
}
}
\examples{

}
\seealso{

}
\author{
Thomas Guillerme
}
